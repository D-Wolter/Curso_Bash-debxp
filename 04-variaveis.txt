! buscar evento
!! mostrar ultimo evento executado

Apenas letras maiusculas e minusculas de a-z, numeros e Sublinhado'_'

:~$ fruta="banana"
:~$ nota=10
:~$ nomes=("daniel""wolter""martins")
:~$ retorno=$(whoami)

(input)
#!/usr/bin/env bash

read -p "DIgite seu Nome!: " nome
echo "muito prazer, $nome!"

nota=10 - numerica
valor=234.50 - bash não trata float -> string - todos os valores no bash por padrao é strings

Para declarar tipo tipo de variavel 
declare -i -inteiro
declare -A -maisculas -> array assosiativos
declare -p -exibe atributos da variavel

existe muitos comandos declare no help


nomes=("daniel""wolter""martins")
nomes[0]="daniel"
nomes[1]="woltyer"
nomes[2]="martins"

Tipos de Variaveis
* locais -> disponivel na sessao corrente do shell
* de ambiente -> disponiveis para todos processoas no shell
* especiais -> o shel define se local ou ambiente

locais -ficam no shell temporariamente ate sair
"exit" encerra shell iniciado por script, abretura de terminal ou login em console (tty)
exit0 -sucesso
exit1 -erro

variaveis de ambiente
sao todas as que foram adicionadas a algum script ou path instaladores, pode, ser acessadas
por todos programas que a chamarem

export -comando export habilita propriedade de exportaçao da var tornando ambiente

env -quando executamos env sem argumentos exibe uma lista completa de todas vaiaveis ambientes
"printenv" -tambem pode se usar

help export

man env


Variaveis Inalteraveis (sao contantes apenas para leitura read-only, 
só poder ser modificadas encerrando o shell

fauna="leao" 
echo $fauna _leao
readonly fauna _tornando somente leitura
fauna="onça" _erro variavel apenas para leitura
unset: fauna: _erro apenas leitura impossivel remover

Atribuir saida comando a variavel

usuario=$(whoami)
echo @usuario
-------------------------------------------
INPUT

read -p "qual seu nome? usuario 
mensagem="seja muito bem vndo dr $usuario"
echo $mensagem
echo $$ // exibe PID do script
exit0 //saida sem erro

sudo apt update && sudo apt upgrade - so executa segunda a açao se tiver sucesso pa primeirqa
test 5 -eq 5 && echo"sucesso" //so exibe mensagem sucesso se verdadeiro o teste

test 2 -eq 5 && echo"sucesso" || echo "erro" //exibe sucesso se true e erro se false

